l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9]

# 对列表进行赋值操作，执行的实际是浅拷贝
l2 = l1
print(hex(id(l1)), hex(id(l2)))

# 如果是浅拷贝，两个变量指向同一个地址，一方更改，另一方也受影响
l2[0] = 10
print(l1, l2)

l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9]

# 通过 copy 方法进行深拷贝
l2 = l1.copy()
print(hex(id(l1)), hex(id(l2)))

# 拥有各自独立的空间，不会影响另外一个
l2[0] = 10
print(l1, l2)


# 动态类型: 类型在运行过程中确定，可以改变，一般不用在定义(如果有定义)时指定类型
# 静态类型: 类型在编译时确定，运行期间不变，始终保存定义时所提供的类型

# 强类型： 不同类型的变量，所能够执行的操作是不同的，例如整数相乘是乘法，字符串乘法是重复
# 弱类型： 运算不考虑类型，可以为任何类型提供计算

